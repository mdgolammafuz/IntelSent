services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    image: intelsent-api:latest
    container_name: intelsent-api
    command: >
      uvicorn serving.api:app
      --host 0.0.0.0 --port 8000
      --workers 1
      --timeout-keep-alive 10
      --no-server-header
    environment:
      # ---- force local-only (no OpenAI) ----
      NO_OPENAI: "1"
      OPENAI_API_KEY: ""

      # ---- ensure the chain initializes ----
      SKIP_CHAIN_INIT: "0"

      # ---- app config ----
      API_KEYS: demo-key-123
      APP_CONFIG: /app/config/app.yaml
      HF_HOME: /app/.cache/hf
      REDIS_URL: redis://intelsent-redis:6379/0
      PYTHONUNBUFFERED: "1"
      PYTHONPATH: /app
    ports:
      - "8000:8000"
    volumes:
      - ./config/app.docker.yml:/app/config/app.yaml:ro
      - ./config/drivers.yml:/app/config/drivers.yml:ro
      - ./data:/app/data
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8000/healthz || exit 1"]
      interval: 3s
      timeout: 2s
      retries: 40
      start_period: 20s
    restart: unless-stopped
    depends_on:
      intelsent-redis:
        condition: service_healthy
      # If you keep pgvector, gate on it; otherwise delete this whole service.
      pgvector:
        condition: service_healthy

  intelsent-redis:
    image: redis:7-alpine
    container_name: intelsent-redis
    ports: ["6379:6379"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 2s
      timeout: 2s
      retries: 30

  # Remove this whole block if youâ€™re not using Postgres/pgvector.
  pgvector:
    image: ankane/pgvector:latest
    container_name: intel_pgvector
    ports: ["5432:5432"]
    environment:
      POSTGRES_USER: intel
      POSTGRES_PASSWORD: intel
      POSTGRES_DB: intelrag
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U intel -d intelrag"]
      interval: 2s
      timeout: 2s
      retries: 30
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
